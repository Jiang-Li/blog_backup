import pandas as pd
def oneway(g):
return(
pd.Series({
"measure1": g.measure1.sum(),
"measure2": g.measure2.sum(),
"count": len(g),
"measure1_percent": g.measure1.sum()/df.measure1.sum(),
"ratio": g.measure1.sum()/g.measure2.sum(),
"ratio_relativity":
(g.measure1.sum()/g.measure2.sum())/
(df.measure1.sum()/df.measure2.sum())
})
)
df.groupby("dimension1").apply(oneway)
df = pd.read_csv("sample.csv")
def oneway(g):
return(
pd.Series({
"measure1": g.measure1.sum(),
"measure2": g.measure2.sum(),
"count": len(g),
"measure1_percent": g.measure1.sum()/df.measure1.sum(),
"ratio": g.measure1.sum()/g.measure2.sum(),
"ratio_relativity":
(g.measure1.sum()/g.measure2.sum())/
(df.measure1.sum()/df.measure2.sum())
})
)
df.groupby("dimension1").apply(oneway)
list(df)
pd.melt(df,
id_vars=['dimension1', 'dimension2'],
value_vars=['measure1', 'measure2'])
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::build_site()
install.packages("reticulate")
blogdown:::serve_site()
blogdown:::build_site()
install.packages("tidycensus")
install.packages("mapview")
census_api_key("37c38f3d2e15304bd682b2fb6da6dd87df896430",
install = T,
overwrite = T)
library(tidycensus)
library(mapview)
options(tigris_use_cache = TRUE)
census_api_key("37c38f3d2e15304bd682b2fb6da6dd87df896430",
install = T,
overwrite = T)
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::build_site()
blogdown:::serve_site()
blogdown::hugo_build()
